<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd"
		default-lazy-init="true">

	<context:component-scan base-package="com.yf.**" />

	<bean id="propertyConfigurer" 

	    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 

	    <property name="location" value="classpath:jdbc.properties" /> 

	  </bean>
<!--	&lt;!&ndash; 数据源 &ndash;&gt;-->
<!--	<bean id="dataSourceMaster" class="com.alibaba.druid.pool.DruidDataSource"-->
<!--		  destroy-method="close">-->
<!--		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />-->
<!--		<property name="url" value="jdbc:mysql://127.0.0.1:3306/leon" />-->
<!--		<property name="username" value="root" />-->
<!--		<property name="password" value="123456" />-->
<!--		<property name="initialSize" value="1"></property>-->
<!--		&lt;!&ndash; 连接池最大数量 &ndash;&gt;-->
<!--		<property name="maxActive" value="100"></property>-->
<!--		&lt;!&ndash; 连接池最大空闲 &ndash;&gt;-->
<!--		<property name="maxIdle" value="500"></property>-->
<!--		&lt;!&ndash; 连接池最小空闲 &ndash;&gt;-->
<!--		<property name="minIdle" value="50"></property>-->
<!--		&lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;-->
<!--		<property name="maxWait" value="600000"></property>-->
<!--	</bean>-->
	<bean id="dataSourceMaster" class="com.alibaba.druid.pool.DruidDataSource"
		  destroy-method="close">
		<property name="url" value="${master.jdbc.url}" />
		<property name="username" value="${master.jdbc.username}" />
		<property name="password" value="${master.jdbc.password}" />
		<property name="driverClassName" value="${master.jdbc.driverClassName}" />
		<property name="filters" value="${master.jdbc.filters}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${master.jdbc.initialSize}" />
		<property name="minIdle" value="${master.jdbc.minIdle}" />
		<property name="maxActive" value="${master.jdbc.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${master.jdbc.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${master.jdbc.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${master.jdbc.minEvictableIdleTimeMillis}" />

		<!-- 数据库校验 -->
		<property name="validationQuery" value="select 1" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="maxOpenPreparedStatements" value="${master.jdbc.maxOpenPreparedStatements}" />

		<property name="removeAbandoned" value="${master.jdbc.removeAbandoned}" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="${master.jdbc.removeAbandonedTimeout}" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->
	</bean>


   <!-- ################## new hlpay #################	 -->
	<!-- 数据源代理 格式化 -->
	<bean id="dataSource_proxy" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceMaster" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="SINGLE_LINE" />
				<property name="sqlPrefix" value="SQL:::" />
			</bean>
		</property>
	</bean>

	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_proxy" />
		<!-- 扫描数据库实体映射 -->
		<property name="typeAliasesPackage" value="com.yf.entity" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath*:/mybatis/*Mapper.xml" />
	</bean>

	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 指定数据源 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <!-- 注意 根据实际包路径 -->
		<property name="basePackage" value="com.yf.mapper" />
		<property name="annotationClass" value="com.yf.utils.MasterRepository"/>
	</bean>

	<!-- 事务  -->
	<!-- 单个数据源 实物配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_proxy" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
