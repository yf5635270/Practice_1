<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	    http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"
	   default-lazy-init="true">

	<mvc:default-servlet-handler/>
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.yf.**" />

	<bean id="dataSource" class="com.yf.db.util.ThreadLocalRountingDataSource">
		<property name="defaultTargetDataSource" ref="dataSourceMaster" />
		<property name="targetDataSources">
			<map key-type="com.yf.db.DataSources">
				<entry key="MASTER" value-ref="dataSourceMaster"/>
				<entry key="SLAVE" value-ref="dataSourceSlave"/>
				<!-- 这里还可以加多个dataSource -->
			</map>
		</property>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:mapping/*.xml" />
	</bean>
	<!-- Transaction manager for a single JDBC DataSource -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yf.mapper" />
		<!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/> -->
	</bean>

	<!-- 数据源 -->
	<bean id="dataSourceMaster" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="url" value="${master.jdbc.url}" />
		<property name="username" value="${master.jdbc.username}" />
		<property name="password" value="${master.jdbc.password}" />
		<property name="driverClassName" value="${master.jdbc.driverClassName}" />
		<property name="filters" value="${master.jdbc.filters}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${master.jdbc.initialSize}" />
		<property name="minIdle" value="${master.jdbc.minIdle}" />
		<property name="maxActive" value="${master.jdbc.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${master.jdbc.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${master.jdbc.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${master.jdbc.minEvictableIdleTimeMillis}" />

		<!-- 数据库校验 -->
		<property name="validationQuery" value="select 1" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="maxOpenPreparedStatements" value="${master.jdbc.maxOpenPreparedStatements}" />

		<property name="removeAbandoned" value="${master.jdbc.removeAbandoned}" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="${master.jdbc.removeAbandonedTimeout}" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->
	</bean>

	<!-- 数据源 -->
	<bean id="dataSourceSlave" class="com.alibaba.druid.pool.DruidDataSource"
		  destroy-method="close">
		<property name="url" value="${master.jdbc.url}" />
		<property name="username" value="${master.jdbc.username}" />
		<property name="password" value="${master.jdbc.password}" />
		<property name="driverClassName" value="${master.jdbc.driverClassName}" />
		<property name="filters" value="${master.jdbc.filters}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${master.jdbc.initialSize}" />
		<property name="minIdle" value="${master.jdbc.minIdle}" />
		<property name="maxActive" value="${master.jdbc.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${master.jdbc.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${master.jdbc.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${master.jdbc.minEvictableIdleTimeMillis}" />

		<!-- 数据库校验 -->
		<property name="validationQuery" value="select 1" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="maxOpenPreparedStatements" value="${master.jdbc.maxOpenPreparedStatements}" />

		<property name="removeAbandoned" value="${master.jdbc.removeAbandoned}" /> <!-- 打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="${master.jdbc.removeAbandonedTimeout}" /> <!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->
	</bean>


</beans>	